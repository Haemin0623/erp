<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="headns">
<!-- 이상없쥬? -->
	<select id="list" resultType="orderHead">
		select	*
		from	order_head
		where	del == 'N'
		order by h.orderdate desc
	</select>
	
	<insert id="insert" parameterType="orderHead">
		insert into	order_head
		values 		(#{orderNo},
					#{buyerCd},
					#{orderdate},
					#{employeeCd},
					null,
					'승인대기',
					null,
					null,
					'N')
	</insert>
	
	<select id="search" parameterType="orderHead" resultType="orderHead">	
		select	*
		from	(select a.*,
						rowNum rn
      			 from	(select hi.*
      			 		from	(select	distinct h.*,
      			 						b.bname,
      			 						e.ename,
      			 						e.job,
      			 						e.department
								from	m_buyer b,
										order_head h,
										order_item i,
										m_product p,
										m_employee e
								where	h.order_no = i.order_no(+)
									and	h.buyer_cd = b.buyer_cd
									and i.product_cd(+) = p.product_cd
									and h.employee_cd = e.employee_cd
									<if test="orderNo != null and orderNo != ''">
										and h.order_no like '%' || #{orderNo} || '%'
									</if>
									<if test="buyerCd != null and buyerCd != ''">
										and (h.buyer_cd like '%' || #{buyerCd} || '%'
											or	bname like '%' || #{buyerCd} || '%')
									</if><if test="orderFromDate != null or orderToDate != null">
										<if test="orderFromDate == null">
											and h.orderdate between '0001-01-01' and #{orderToDate}
										</if>
										<if test="orderToDate == null">
											and h.orderdate between #{orderFromDate} and '9999-12-31'
										</if>
										<if test="orderFromDate != null and orderToDate != null">
											and h.orderdate between #{orderFromDate} and #{orderToDate}
										</if>
									</if><if test="employeeCd != null and employeeCd != ''">
										and (h.employee_cd like '%' || #{employeeCd} || '%'
											or ename like '%' || #{employeeCd} || '%')
									</if>
									<if test="status != null and status != 'null'">
										and h.status = #{status}
									</if>
									<if test="productCd != null and productCd != ''">
										and (i.product_cd like '%' || #{productCd} || '%'
											or pname like '%' || #{productCd} || '%')
									</if>
									<if test="requestFromDate != null or requestToDate != null">				
										<if test="requestFromDate == null">
											and h.orderdate between '0001-01-01' and #{requestToDate}
										</if>
										<if test="requestToDate == null">
											and h.orderdate between #{requestFromDate} and '9999-12-31'
										</if>
										<if test="requestFromDate != null and requestToDate != null">
											and i.requestdate between #{requestFromDate} and #{requestToDate}
										</if>				
									</if>
									<if test="del != 'All'">
										and h.del = #{del}
									</if>
								order by
									<if test="sortOrderDate == 1">
										h.orderdate desc
									</if>
									<if test="sortOrderDate == 2">
										h.orderdate asc
									</if>
									<if test="sortOrderNo == 1">
										h.order_no desc
									</if>
									<if test="sortOrderNo == 2">
										h.order_no asc
									</if>
									<if test="sortBuyerCd == 1">
										h.buyer_cd desc
									</if>
									<if test="sortBuyerCd == 2">
										h.buyer_cd asc
									</if>
									<if test="sortEmployeeCd == 1">
										h.employee_cd desc
									</if>
									<if test="sortEmployeeCd == 2">
										h.employee_cd asc
									</if>
									<if test="sortStatus == 1">
										h.status desc
									</if>
									<if test="sortStatus == 2">
										h.status asc
									</if>
									<if test="sortStatusDate == 1">
										h.statusdate desc
									</if>
									<if test="sortStatusDate == 2">
										h.statusdate asc
									</if>
									) hi
						) a
				)
		where	rn between #{startRow} and #{endRow}
<!-- 		select	*
		from	(select a.*,
						rowNum rn
				from	(select	distinct h.*
						from	order_head h left outer join
								order_item i
						on		h.order_no = i.order_no
						<where>
							<if test="orderNo != null and orderNo != ''">
								and h.order_no like '%' || #{orderNo} || '%'
							</if>
							<if test="buyerCd != null and buyerCd != 'All'">
								and h.buyer_cd like '%' || #{buyerCd} || '%'
							</if><if test="orderFromDate != null or orderToDate != null">
								<if test="orderFromDate == null">
									and h.orderdate between '0001-01-01' and #{orderToDate}
								</if>
								<if test="orderToDate == null">
									and h.orderdate between #{orderFromDate} and '9999-12-31'
								</if>
								<if test="orderFromDate != null and orderToDate != null">
									and h.orderdate between #{orderFromDate} and #{orderToDate}
								</if>
							</if><if test="employeeCd != null and employeeCd != 'All'">
								and h.employee_cd like '%' || #{employeeCd} || '%'
							</if>
							<if test="status != null and status != 'null'">
								and h.status = #{status}
							</if>
							<if test="productCd != null and productCd != 'All'">
								and i.product_cd like '%' || #{productCd} || '%'
							</if>
							<if test="requestFromDate != null or requestToDate != null">				
								<if test="requestFromDate == null">
									and h.orderdate between '0001-01-01' and #{requestToDate}
								</if>
								<if test="requestToDate == null">
									and h.orderdate between #{requestFromDate} and '9999-12-31'
								</if>
								<if test="requestFromDate != null and requestToDate != null">
									and i.requestdate between #{requestFromDate} and #{requestToDate}
								</if>				
							</if>
							<if test="del != 'All'">
								and h.del = #{del}
							</if>	
						</where>
						order by
							<if test="sortOrderDate == 1">
								h.orderdate desc
							</if>
							<if test="sortOrderDate == 2">
								h.orderdate asc
							</if>
							<if test="sortOrderNo == 1">
								h.order_no desc
							</if>
							<if test="sortOrderNo == 2">
								h.order_no asc
							</if>
							<if test="sortBuyerCd == 1">
								h.buyer_cd desc
							</if>
							<if test="sortBuyerCd == 2">
								h.buyer_cd asc
							</if>
							<if test="sortEmployeeCd == 1">
								h.employee_cd desc
							</if>
							<if test="sortEmployeeCd == 2">
								h.employee_cd asc
							</if>
							<if test="sortStatus == 1">
								h.status desc
							</if>
							<if test="sortStatus == 2">
								h.status asc
							</if>
							<if test="sortStatusDate == 1">
								h.statusdate desc
							</if>
							<if test="sortStatusDate == 2">
								h.statusdate asc
							</if>
						) a
				)
		where	rn between #{startRow} and #{endRow} -->
	</select> 
	
	<select id="headEmpList" resultType="orderHead">
		select	distinct * 
		from	order_head h, 
				m_employee e
   		where	h.employee_cd=e.employee_cd
   	order by	h.orderdate desc, h.order_no asc
	</select>
	

	
	
	<update id="orderApproval" parameterType="orderHead">
		update	order_head 
		set		status=#{status},
				reason=#{reason}
		where	order_no=#{orderNo}
	</update>
	
	
	<update id="approvalRequest" parameterType="String">
		update	order_head
		set		status = '승인요청',
				statusdate = sysdate
		where	order_no=#{orderNo}
	</update>
	
	<update id="approvalCancel" parameterType="String">
		update	order_head
		set		status = '승인대기',
				statusdate = sysdate
		where	order_no=#{orderNo}
	</update>
	
	<update id="updateHead" parameterType="orderHead">
		update	order_head
		set		buyer_cd = #{buyerCd},
				orderdate = #{orderdate},
				employee_cd = #{employeeCd},
				statusdate = sysdate
		where	order_no = #{orderNo}
	</update>
	
	<select id="getOrderCount" parameterType="String" resultType="String">
		select	LPAD(count(*)+1,3 , 0)
		from	order_head
		where	order_no like '%' || #{orderNo} || '%'
	</select>
	
	<update id="orderDelete" parameterType="String">
		update	order_head
		set		del = 'Y',
				statusdate = sysdate
		where	order_no = #{orderNo}
	</update>
	
	<update id="orderRestore" parameterType="String">
		update	order_head
		set		del = 'N',
				statusdate = sysdate
		where	order_no = #{orderNo}
	</update>
	
	<select id="getTotal" parameterType="orderHead" resultType="integer">
		select	count(distinct h.order_no)
		from	m_buyer b,
				order_head h,
				order_item i,
				m_product p,
				m_employee e
		where	h.order_no(+) = i.order_no
			and	h.buyer_cd = b.buyer_cd
			and i.product_cd = p.product_cd
			and h.employee_cd = e.employee_cd
			<if test="orderNo != null and orderNo != ''">
				and h.order_no like '%' || #{orderNo} || '%'
			</if>
			<if test="buyerCd != null and buyerCd != ''">
				and (h.buyer_cd like '%' || #{buyerCd} || '%'
					or	bname like '%' || #{buyerCd} || '%')
			</if><if test="orderFromDate != null or orderToDate != null">
				<if test="orderFromDate == null">
					and h.orderdate between '0001-01-01' and #{orderToDate}
				</if>
				<if test="orderToDate == null">
					and h.orderdate between #{orderFromDate} and '9999-12-31'
				</if>
				<if test="orderFromDate != null and orderToDate != null">
					and h.orderdate between #{orderFromDate} and #{orderToDate}
				</if>
			</if><if test="employeeCd != null and employeeCd != ''">
				and (h.employee_cd like '%' || #{employeeCd} || '%'
					or ename like '%' || #{employeeCd} || '%')
			</if>
			<if test="status != null and status != 'null'">
				and h.status = #{status}
			</if>
			<if test="productCd != null and productCd != ''">
				and (i.product_cd like '%' || #{productCd} || '%'
					or pname like '%' || #{productCd} || '%')
			</if>
			<if test="requestFromDate != null or requestToDate != null">				
				<if test="requestFromDate == null">
					and h.orderdate between '0001-01-01' and #{requestToDate}
				</if>
				<if test="requestToDate == null">
					and h.orderdate between #{requestFromDate} and '9999-12-31'
				</if>
				<if test="requestFromDate != null and requestToDate != null">
					and i.requestdate between #{requestFromDate} and #{requestToDate}
				</if>				
			</if>
			<if test="del != 'All'">
				and h.del = #{del}
			</if>
	</select>
	
	<select id="listForExcel" parameterType="orderHead" resultType="orderHead">
		select	*
		from	order_head
		where	order_no = #{orderNo}
	</select>
	
	<select id="select" parameterType="String" resultType="orderHead">
		select	*
		from	order_head
		where	order_no = #{orderNo}
	</select>
</mapper>