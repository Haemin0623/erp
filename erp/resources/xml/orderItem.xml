<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itemns">

	<insert id="insert" parameterType="orderItem">
		insert into order_item values (#{orderNo}, #{productCd}, #{requestqty}, #{requestdate}, #{price}, #{amount}, #{remark})
	</insert>
	
	<select id="itemList" parameterType="string" resultType="orderItem">
		select	* 
		from	order_item i, 
				m_product p, 
				m_employee e, 
				order_head h
		where	i.product_cd=p.product_cd
			and h.order_no=i.order_no
        	and h.employee_cd=e.employee_cd
			and i.order_no = #{orderNo}
	</select>
	
	<select id="orderStatusList" resultType="orderItem">
		select	distinct *
		from	order_head h, 
				order_item i, 
				m_product p, 
				m_employee e, 
				m_buyer b
   		where h.order_no=i.order_no
   			and i.product_cd=p.product_cd 
      		and h.employee_cd=e.employee_cd
        	and h.buyer_cd=b.buyer_cd
    	order by h.orderdate desc , h.order_no asc
	</select>
	
	<select id="search" parameterType="orderHead" resultType="orderHead">
		select	*
		from	(select aa.*,
						rowNum rn
				from	(
						
						select  a.*,
                                sign.ename auth
                        from    m_employee sign,
                                (select  i.*, e.*, c.*, h.orderdate, h.reason, h.status, h.statusdate hstatusdate, b.buyer_cd, b.bname, b.manager, b.address, b.tel, b.email, pd.pname,
                                        h.signemp_cd signCd
                                from    order_item i,
                                        order_head h,
                                        m_employee e,
                                        m_buyer b,
                                        m_country c,
                                        m_product pd
								<where>
									i.order_no = h.order_no
		                                    and h.employee_cd = e.employee_cd
		                                    and b.buyer_cd = h.buyer_cd
		                                    and b.country_cd = c.country_cd
		                                    and pd.product_cd = i.product_cd
									<if test="orderNo != null and orderNo != ''">
										and i.order_no like '%' || #{orderNo} || '%'
									</if>
									<if test="buyerCd != null and buyerCd != 'All'">
										and b.buyer_cd like '%' || #{buyerCd} || '%'
									</if>
									<if test="orderFromDate != null or orderToDate != null">
										<if test="orderFromDate == null">
											and h.orderdate between '0001-01-01' and #{orderToDate}
										</if>
										<if test="orderToDate == null">
											and h.orderdate between #{orderFromDate} and '9999-12-31'
										</if>
										<if test="orderFromDate != null and orderToDate != null">
											and h.orderdate between #{orderFromDate} and #{orderToDate}
										</if>
									</if>
									<if test="employeeCd != null and employeeCd != 'All'">
										and e.employee_cd like '%' || #{employeeCd} || '%'
									</if>
									<if test="status != null and status != 'null'">
										and h.status = #{status}
									</if>
									<if test="productCd != null and productCd != 'All'">
										and i.product_cd like '%' || #{productCd} || '%'
									</if>
									<if test="requestFromDate != null or requestToDate != null">				
										<if test="requestFromDate == null">
											and h.orderdate between '0001-01-01' and #{requestToDate}
										</if>
										<if test="requestToDate == null">
											and h.orderdate between #{requestFromDate} and '9999-12-31'
										</if>
										<if test="requestFromDate != null and requestToDate != null">
											and i.requestdate between #{requestFromDate} and #{requestToDate}
										</if>				
									</if>
									<if test="countryCd != null and countryCd != 'All'">
										and c.country_cd like '%' || #{countryCd} || '%'
									</if>
								</where>
								) a
						where   signCd = sign.employee_cd(+)
					order by	a.orderdate desc , a.order_no asc
					) aa
				)
		where	rn between #{startRow} and #{endRow}
			
	</select> 
	<select id="listForExcel" parameterType="orderHead" resultType="orderHead">
		select ss.*,e.*, e.ename auth, b.*, p.*,c.* from (select distinct oi.*, oh.buyer_cd, oh.orderdate, oh.employee_cd empCd, oh.reason, oh.status, oh.statusdate, oh.signemp_cd signCd, oh.del from order_item oi, order_head oh 
		    where oh.order_no=oi.order_no and oi.product_cd=#{productCd} and oi.order_no=#{orderNo}) ss, 
		    
		    m_employee e,
		    m_buyer b,
		   m_country c,
		    m_product p
		    where signCd = e.employee_cd(+) 
		        and ss.buyer_cd=b.buyer_cd 
		        and ss.product_cd=p.product_cd 
		        and c.country_cd=b.country_cd
	</select>
	<select id="getTotal" parameterType="orderHead" resultType="integer">
		select  count(*)
	    from	m_employee sign,
	           (select  i.*, e.*,c.*,h.orderdate, h.reason, h.status, h.statusdate hstatusdate, b.buyer_cd, b.bname, b.manager, b.address, b.tel, b.email,
	           
	                   h.signemp_cd signCd
	           from    order_item i,
	                   order_head h,
	                   m_employee e,
	                   m_buyer b,
	                   m_country c,
	                   m_product pd
	          <where>
					i.order_no = h.order_no
                                  and h.employee_cd = e.employee_cd
                                  and b.buyer_cd = h.buyer_cd
                                  and b.country_cd = c.country_cd
                                  and pd.product_cd = i.product_cd
					<if test="orderNo != null and orderNo != ''">
						and i.order_no like '%' || #{orderNo} || '%'
					</if>
					<if test="buyerCd != null and buyerCd != 'All'">
						and b.buyer_cd like '%' || #{buyerCd} || '%'
					</if>
					<if test="orderFromDate != null or orderToDate != null">
						<if test="orderFromDate == null">
							and h.orderdate between '0001-01-01' and #{orderToDate}
						</if>
						<if test="orderToDate == null">
							and h.orderdate between #{orderFromDate} and '9999-12-31'
						</if>
						<if test="orderFromDate != null and orderToDate != null">
							and h.orderdate between #{orderFromDate} and #{orderToDate}
						</if>
					</if>
					<if test="employeeCd != null and employeeCd != 'All'">
						and e.employee_cd like '%' || #{employeeCd} || '%'
					</if>
					<if test="status != null and status != 'null'">
						and h.status = #{status}
					</if>
					<if test="productCd != null and productCd != 'All'">
						and i.product_cd like '%' || #{productCd} || '%'
					</if>
					<if test="requestFromDate != null or requestToDate != null">				
						<if test="requestFromDate == null">
							and h.orderdate between '0001-01-01' and #{requestToDate}
						</if>
						<if test="requestToDate == null">
							and h.orderdate between #{requestFromDate} and '9999-12-31'
						</if>
						<if test="requestFromDate != null and requestToDate != null">
							and i.requestdate between #{requestFromDate} and #{requestToDate}
						</if>				
					</if>
					<if test="countryCd != null and countryCd != 'All'">
						and c.country_cd like '%' || #{countryCd} || '%'
					</if>
				</where>
	           ) a
	   where   signCd = sign.employee_cd(+)
	 order by	a.orderdate desc , a.order_no asc
	</select> 
	<select id="monthAmount7" resultType="integer">
		select	nvl(sum(amount),0)
		from	order_head h, order_item i, m_product mp
    	where	i.product_cd = mp.product_cd
       		and h.order_no = i.order_no
       		and h.status = '승인'
       		and h.orderdate between '2022.07.01' and '2022.07.30'
	</select>
	<select id="monthAmount8" resultType="integer">
		select	nvl(sum(amount),0)
		from	order_head h, order_item i, m_product mp
    	where	i.product_cd = mp.product_cd
       		and h.order_no = i.order_no
       		and h.status = '승인'
       		and h.orderdate between '2022.08.01' and '2022.08.31'
	</select>
	<select id="monthAmount9" resultType="integer">
		select	nvl(sum(amount),0)
		from	order_head h, order_item i, m_product mp
    	where	i.product_cd = mp.product_cd
       		and h.order_no = i.order_no
       		and h.status = '승인'
       		and h.orderdate between '2022.09.01' and '2022.09.30'
	</select>
	<select id="monthAmount10" resultType="integer">
		select	nvl(sum(amount),0)
		from	order_head h, order_item i, m_product mp
    	where	i.product_cd = mp.product_cd
       		and h.order_no = i.order_no
       		and h.status = '승인'
       		and h.orderdate between '2022.10.01' and '2022.10.31'
	</select>
	<select id="monthAmount11" resultType="integer">
		select	nvl(sum(amount),0)
		from	order_head h, order_item i, m_product mp
    	where	i.product_cd = mp.product_cd
       		and h.order_no = i.order_no
       		and h.status = '승인'
       		and h.orderdate between '2022.11.01' and '2022.11.30'
	</select>
	<select id="monthAmount12" resultType="integer">
		select	nvl(sum(amount),0)
		from	order_head h, order_item i, m_product mp
    	where	i.product_cd = mp.product_cd
       		and h.order_no = i.order_no
       		and h.status = '승인'
       		and h.orderdate between '2022.12.01' and '2022.12.31'
	</select>
	<select id="listOfSales" resultType="Employee">
		select	*
		from	m_employee 
		where	department='영업'
	</select>
	<select id="amountByEmp" parameterType="String" resultType="integer">
		select nvl(sum(amount),0) from order_head h, order_item i, m_employee me
   		where h.employee_cd = me.employee_cd
        	and h.order_no = i.order_no
        	and h.status = '승인'
       		and h.orderdate between '2022.06.01' and '2022.06.30'
       		and me.employee_cd = #{empCd}
	</select>
</mapper>